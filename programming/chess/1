/*
//判斷可下同顏色的旗子與否
int can_place(int chess[BOARD_SIZE][BOARD_SIZE],int player, int x, int y){
    if (chess[x][y] != 0){
        return 0;
    }

    //二維陣列判斷八個方向
    int judge[8][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {-1, -1}, {1, -1}, {-1, 1}};

    for (int d = 0; d < 8; d++) {
        int dx = judge[d][0];
        int dy = judge[d][1];
        int x_ = x + dx;
        int y_ = y + dy;
        
    if (judge[x_][y_] != player){
         if (in_board(x_, y_) && judge[x_][y_] != 0 && chess[x_][y_] != player){
            x_ += dx;
            y_ += dy;
        }

        if (in_board(x_, y_) && chess[x_][y_] == player) {
            return 1;  
        }
    }
    }

    return 0;  
    }
    */